name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events
  push:
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # ðŸ”Ž Lint first â€” must pass or the rest is blocked
  lint:
    name: Ktlint (code style)
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v4

      # Installs Java 21 (Temurin distribution â€” OpenJDK by Eclipse Adoptium) so Gradle and ktlint can run
      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      # Validates the Gradle Wrapper for security (prevents running a compromised wrapper)
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2

      # Sets up Gradle with dependency caching to speed up subsequent runs
      - name: Setup Gradle (cache)
        uses: gradle/actions/setup-gradle@v3

      # ðŸ‘‰ Run ktlint and always print violations if it fails, then fail the job
      - name: Run ktlint and print violations
        run: |
          set -o pipefail
          ./gradlew ktlintCheck --console=plain || EXIT_CODE=$?

          if [ -n "${EXIT_CODE}" ]; then
            echo "::group::ktlint reports"
            # Print human-friendly .txt reports if available
            found_txt=false
            while IFS= read -r -d '' f; do
              found_txt=true
              echo "===== $f ====="
              cat "$f" || true
              echo
            done < <(find . -type f -path "*/build/reports/ktlint/*/*.txt" -print0)

            # Fallback: dump first 200 lines of XML so violations are visible in logs
            if [ "$found_txt" = false ]; then
              echo "No PLAIN .txt report found; dumping XML instead."
              while IFS= read -r -d '' f; do
                echo "===== $f ====="
                sed -n '1,200p' "$f" || true
                echo
              done < <(find . -type f -path "*/build/reports/ktlint/*/*.xml" -print0)
              echo "Tip: enable PLAIN reporter in Gradle for nicer console output."
            fi
            echo "::endgroup::"
            exit 1
          fi

  # ðŸ§± Build only runs if lint passed
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runner's shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runner's shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
